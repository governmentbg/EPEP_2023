// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static VSS.Portal.Controllers.FeedbackController Feedback = new VSS.Portal.Controllers.T4MVC_FeedbackController();
    public static VSS.Portal.Controllers.HomeController Home = new VSS.Portal.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_datepicker_bg_min_js = Url("bootstrap-datepicker.bg.min.js");
        public static readonly string bootstrap_datepicker_min_js = Url("bootstrap-datepicker.min.js");
        public static readonly string html5shiv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5shiv.min.js") ? Url("html5shiv.min.js") : Url("html5shiv.js");
        public static readonly string jquery_1_11_2_min_js = Url("jquery-1.11.2.min.js");
        public static readonly string jquery_easing_1_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.easing.1.3.min.js") ? Url("jquery.easing.1.3.min.js") : Url("jquery.easing.1.3.js");
        public static readonly string markerclusterer_compiled_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/markerclusterer_compiled.min.js") ? Url("markerclusterer_compiled.min.js") : Url("markerclusterer_compiled.js");
        public static readonly string oms_min_js = Url("oms.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scripts.min.js") ? Url("scripts.min.js") : Url("scripts.js");
        public static readonly string select2_min_js = Url("select2.min.js");
        public static readonly string select2_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_bg.min.js") ? Url("select2_locale_bg.min.js") : Url("select2_locale_bg.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker3_standalone_min_css = Url("bootstrap-datepicker3.standalone.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string select2_spinner_gif = Url("select2-spinner.gif");
            public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
                 
            public static readonly string select2_png = Url("select2.png");
            public static readonly string select2x2_png = Url("select2x2.png");
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            private const string URLPATH = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string arrow_right_png = Url("arrow-right.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class demo {
                private const string URLPATH = "~/Content/img/demo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _14058714_jpg = Url("14058714.jpg");
                public static readonly string captcha_gif = Url("captcha.gif");
                public static readonly string home_search_jpg = Url("home-search.jpg");
            }
        
            public static readonly string footer_logos_gif = Url("footer-logos.gif");
            public static readonly string gerb_jpg = Url("gerb.jpg");
            public static readonly string gototop_png = Url("gototop.png");
            public static readonly string home_courts_bg_jpg = Url("home-courts-bg.jpg");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/img/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _404_png = Url("404.png");
                public static readonly string arrow_right_circle_orange_png = Url("arrow-right-circle-orange.png");
                public static readonly string arrow_right_circle_png = Url("arrow-right-circle.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class browsers {
                    private const string URLPATH = "~/Content/img/icons/browsers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string chrome_png = Url("chrome.png");
                    public static readonly string ie_png = Url("ie.png");
                    public static readonly string mozilla_png = Url("mozilla.png");
                    public static readonly string opera_png = Url("opera.png");
                    public static readonly string safari_png = Url("safari.png");
                }
            
                public static readonly string chevron_up_png = Url("chevron-up.png");
                public static readonly string close_circle_png = Url("close-circle.png");
                public static readonly string eco_tree_png = Url("eco_tree.png");
                public static readonly string error_png = Url("error.png");
                public static readonly string home_service_1_png = Url("home-service-1.png");
                public static readonly string home_service_2_png = Url("home-service-2.png");
                public static readonly string home_service_3_png = Url("home-service-3.png");
                public static readonly string home_service_4_png = Url("home-service-4.png");
                public static readonly string ico_info_png = Url("ico_info.png");
                public static readonly string map_png = Url("map.png");
                public static readonly string orange_arrow_right_jpg = Url("orange-arrow-right.jpg");
                public static readonly string search_png = Url("search.png");
                public static readonly string success_png = Url("success.png");
                public static readonly string warning_png = Url("warning.png");
            }
        
            public static readonly string inner_top_head_jpg = Url("inner-top-head.jpg");
            public static readonly string li_tick_png = Url("li-tick.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class markers {
                private const string URLPATH = "~/Content/img/markers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string circle_png = Url("circle.png");
                public static readonly string marker01_png = Url("marker01.png");
                public static readonly string marker02_png = Url("marker02.png");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
                public const string bootstrap_datepicker_bg_min_js = "~/Scripts/bootstrap-datepicker.bg.min.js"; 
                public const string bootstrap_datepicker_min_js = "~/Scripts/bootstrap-datepicker.min.js"; 
                public const string html5shiv_js = "~/Scripts/html5shiv.js"; 
                public const string jquery_1_11_2_min_js = "~/Scripts/jquery-1.11.2.min.js"; 
                public const string jquery_easing_1_3_js = "~/Scripts/jquery.easing.1.3.js"; 
                public const string markerclusterer_compiled_js = "~/Scripts/markerclusterer_compiled.js"; 
                public const string oms_min_js = "~/Scripts/oms.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string scripts_js = "~/Scripts/scripts.js"; 
                public const string select2_min_js = "~/Scripts/select2.min.js"; 
                public const string select2_locale_bg_js = "~/Scripts/select2_locale_bg.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static class Assets
                {
                    public const string bootstrap_datepicker3_standalone_min_css = "~/Content/css/bootstrap-datepicker3.standalone.min.css";
                    public const string bootstrap_min_css = "~/Content/css/bootstrap.min.css";
                    public const string select2_css = "~/Content/css/select2.css";
                    public const string style_css = "~/Content/css/style.css";
                }
            }
            public static partial class img 
            {
                public static partial class demo 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class icons 
                {
                    public static partial class browsers 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class markers 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


