// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace eCase.Web.Controllers
{
    public partial class SummonController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SummonController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Details()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectResult GetSummonFile()
        {
            return new T4MVC_System_Web_Mvc_RedirectResult(Area, Name, ActionNames.GetSummonFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectResult GetSummonReportFile()
        {
            return new T4MVC_System_Web_Mvc_RedirectResult(Area, Name, ActionNames.GetSummonReportFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SummonController Actions { get { return MVC.Summon; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Summon";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Summon";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Search = "Search";
            public readonly string Details = "Details";
            public readonly string GetSummonFile = "GetSummonFile";
            public readonly string GetSummonReportFile = "GetSummonReportFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Search = "Search";
            public const string Details = "Details";
            public const string GetSummonFile = "GetSummonFile";
            public const string GetSummonReportFile = "GetSummonReportFile";
        }


        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string courtCode = "courtCode";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
            public readonly string caseNumber = "caseNumber";
            public readonly string caseYear = "caseYear";
            public readonly string isOnlyUnread = "isOnlyUnread";
            public readonly string type = "type";
            public readonly string order = "order";
            public readonly string isAsc = "isAsc";
            public readonly string page = "page";
            public readonly string vm = "vm";
        }
        static readonly ActionParamsClass_Details s_params_Details = new ActionParamsClass_Details();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Details DetailsParams { get { return s_params_Details; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Details
        {
            public readonly string gid = "gid";
        }
        static readonly ActionParamsClass_GetSummonFile s_params_GetSummonFile = new ActionParamsClass_GetSummonFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSummonFile GetSummonFileParams { get { return s_params_GetSummonFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSummonFile
        {
            public readonly string summonGid = "summonGid";
        }
        static readonly ActionParamsClass_GetSummonReportFile s_params_GetSummonReportFile = new ActionParamsClass_GetSummonReportFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSummonReportFile GetSummonReportFileParams { get { return s_params_GetSummonReportFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSummonReportFile
        {
            public readonly string summonGid = "summonGid";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Details = "Details";
                public readonly string Search = "Search";
            }
            public readonly string Details = "~/Views/Summon/Details.cshtml";
            public readonly string Search = "~/Views/Summon/Search.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SummonController : eCase.Web.Controllers.SummonController
    {
        public T4MVC_SummonController() : base(Dummy.Instance) { }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string courtCode, string dateFrom, string dateTo, string caseNumber, string caseYear, bool isOnlyUnread, string type, eCase.Web.Helpers.SummonsOrder order, bool isAsc, string page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(string courtCode, string dateFrom, string dateTo, string caseNumber, string caseYear, bool isOnlyUnread, string type, eCase.Web.Helpers.SummonsOrder order, bool isAsc, string page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "courtCode", courtCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "caseNumber", caseNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "caseYear", caseYear);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isOnlyUnread", isOnlyUnread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isAsc", isAsc);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            SearchOverride(callInfo, courtCode, dateFrom, dateTo, caseNumber, caseYear, isOnlyUnread, type, order, isAsc, page);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, eCase.Web.Models.Summon.SummonSearchVM vm);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(eCase.Web.Models.Summon.SummonSearchVM vm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vm", vm);
            SearchOverride(callInfo, vm);
            return callInfo;
        }

        [NonAction]
        partial void DetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid gid);

        [NonAction]
        public override System.Web.Mvc.ActionResult Details(System.Guid gid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Details);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gid", gid);
            DetailsOverride(callInfo, gid);
            return callInfo;
        }

        [NonAction]
        partial void GetSummonFileOverride(T4MVC_System_Web_Mvc_RedirectResult callInfo, System.Guid summonGid);

        [NonAction]
        public override System.Web.Mvc.RedirectResult GetSummonFile(System.Guid summonGid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectResult(Area, Name, ActionNames.GetSummonFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "summonGid", summonGid);
            GetSummonFileOverride(callInfo, summonGid);
            return callInfo;
        }

        [NonAction]
        partial void GetSummonReportFileOverride(T4MVC_System_Web_Mvc_RedirectResult callInfo, System.Guid summonGid);

        [NonAction]
        public override System.Web.Mvc.RedirectResult GetSummonReportFile(System.Guid summonGid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectResult(Area, Name, ActionNames.GetSummonReportFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "summonGid", summonGid);
            GetSummonReportFileOverride(callInfo, summonGid);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
