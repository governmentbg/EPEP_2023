// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static eCase.Web.Controllers.AccountController Account = new eCase.Web.Controllers.T4MVC_AccountController();
    public static eCase.Web.Controllers.ActController Act = new eCase.Web.Controllers.T4MVC_ActController();
    public static eCase.Web.Controllers.CaseController Case = new eCase.Web.Controllers.T4MVC_CaseController();
    public static eCase.Web.Controllers.CourtUserController CourtUser = new eCase.Web.Controllers.T4MVC_CourtUserController();
    public static eCase.Web.Controllers.FeedbackController Feedback = new eCase.Web.Controllers.T4MVC_FeedbackController();
    public static eCase.Web.Controllers.HearingController Hearing = new eCase.Web.Controllers.T4MVC_HearingController();
    public static eCase.Web.Controllers.HomeController Home = new eCase.Web.Controllers.T4MVC_HomeController();
    public static eCase.Web.Controllers.LawyerController Lawyer = new eCase.Web.Controllers.T4MVC_LawyerController();
    public static eCase.Web.Controllers.StatisticsController Statistics = new eCase.Web.Controllers.T4MVC_StatisticsController();
    public static eCase.Web.Controllers.SummonController Summon = new eCase.Web.Controllers.T4MVC_SummonController();
    public static eCase.Web.Controllers.UserController User = new eCase.Web.Controllers.T4MVC_UserController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectResult : System.Web.Mvc.RedirectResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class custom {
            private const string URLPATH = "~/Scripts/custom";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string html_extensions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html.extensions.min.js") ? Url("html.extensions.min.js") : Url("html.extensions.js");
            public static readonly string jq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jq.min.js") ? Url("jq.min.js") : Url("jq.js");
            public static readonly string jquery_autogrow_textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.autogrow-textarea.min.js") ? Url("jquery.autogrow-textarea.min.js") : Url("jquery.autogrow-textarea.js");
            public static readonly string jquery_cascadingDropDown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cascadingDropDown.min.js") ? Url("jquery.cascadingDropDown.min.js") : Url("jquery.cascadingDropDown.js");
            public static readonly string jquery_custom_extensions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.custom-extensions.min.js") ? Url("jquery.custom-extensions.min.js") : Url("jquery.custom-extensions.js");
            public static readonly string switchFunctions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/switchFunctions.min.js") ? Url("switchFunctions.min.js") : Url("switchFunctions.js");
        }
    
        public static readonly string scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scripts.min.js") ? Url("scripts.min.js") : Url("scripts.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class uxp {
            private const string URLPATH = "~/Scripts/uxp";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker_bg_min_js = Url("bootstrap-datepicker.bg.min.js");
            public static readonly string bootstrap_datepicker_min_js = Url("bootstrap-datepicker.min.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string html5shiv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5shiv.min.js") ? Url("html5shiv.min.js") : Url("html5shiv.js");
            public static readonly string jquery_1_11_2_min_js = Url("jquery-1.11.2.min.js");
            public static readonly string jquery_easing_1_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.easing.1.3.min.js") ? Url("jquery.easing.1.3.min.js") : Url("jquery.easing.1.3.js");
            public static readonly string respond_min_js = Url("respond.min.js");
            public static readonly string select2_min_js = Url("select2.min.js");
            public static readonly string select2_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_bg.min.js") ? Url("select2_locale_bg.min.js") : Url("select2_locale_bg.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker3_min_css = Url("bootstrap-datepicker3.min.css");
            public static readonly string bootstrap_datepicker3_standalone_min_css = Url("bootstrap-datepicker3.standalone.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string custom_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom-style.min.css") ? Url("custom-style.min.css") : Url("custom-style.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class select2 {
                private const string URLPATH = "~/Content/css/select2";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string select2_spinner_gif = Url("select2-spinner.gif");
                public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
                public static readonly string select2_png = Url("select2.png");
                public static readonly string select2x2_png = Url("select2x2.png");
            }
        
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            public static readonly string summons_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summons-style.min.css") ? Url("summons-style.min.css") : Url("summons-style.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            private const string URLPATH = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string blue_gototop_png = Url("blue-gototop.png");
            public static readonly string blue_loader_gif = Url("blue_loader.gif");
            public static readonly string checkbox_gif = Url("checkbox.gif");
            public static readonly string footer_logos_summons_gif = Url("footer-logos-summons.gif");
            public static readonly string footer_logos_gif = Url("footer-logos.gif");
            public static readonly string gerb_jpg = Url("gerb.jpg");
            public static readonly string gototop_gif = Url("gototop.gif");
            public static readonly string gototop_png = Url("gototop.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/img/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _404_png = Url("404.png");
                public static readonly string arrow_right_circle_blue_png = Url("arrow-right-circle-blue.png");
                public static readonly string arrow_right_circle_orange_png = Url("arrow-right-circle-orange.png");
                public static readonly string arrow_up_png = Url("arrow-up.png");
                public static readonly string blue_circle_close_png = Url("blue-circle-close.png");
                public static readonly string blue_circle_png = Url("blue-circle.png");
                public static readonly string blue_ico_download_png = Url("blue-ico-download.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class browsers {
                    private const string URLPATH = "~/Content/img/icons/browsers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string chrome_png = Url("chrome.png");
                    public static readonly string ie_png = Url("ie.png");
                    public static readonly string mozilla_png = Url("mozilla.png");
                    public static readonly string opera_png = Url("opera.png");
                    public static readonly string safari_png = Url("safari.png");
                }
            
                public static readonly string chevron_up_png = Url("chevron-up.png");
                public static readonly string circle_arrow_right_png = Url("circle-arrow-right.png");
                public static readonly string eco_tree_png = Url("eco_tree.png");
                public static readonly string error_png = Url("error.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class files {
                    private const string URLPATH = "~/Content/img/icons/files";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bmp_png = Url("bmp.png");
                    public static readonly string doc_png = Url("doc.png");
                    public static readonly string jpeg_png = Url("jpeg.png");
                    public static readonly string pdf_png = Url("pdf.png");
                    public static readonly string rar_png = Url("rar.png");
                    public static readonly string text_png = Url("text.png");
                    public static readonly string xls_png = Url("xls.png");
                    public static readonly string zip_png = Url("zip.png");
                }
            
                public static readonly string ico_download_png = Url("ico-download.png");
                public static readonly string ico_new_message_png = Url("ico-new-message.png");
                public static readonly string ico_info_png = Url("ico_info.png");
                public static readonly string info_white_png = Url("info-white.png");
                public static readonly string info_png = Url("info.png");
                public static readonly string locker_png = Url("locker.png");
                public static readonly string login_locker_png = Url("login-locker.png");
                public static readonly string orange_circle_close_png = Url("orange-circle-close.png");
                public static readonly string orange_circle_png = Url("orange-circle.png");
                public static readonly string success_png = Url("success.png");
                public static readonly string tick_green_png = Url("tick-green.png");
                public static readonly string warning_png = Url("warning.png");
            }
        
            public static readonly string li_tick_png = Url("li-tick.png");
            public static readonly string loader_gif = Url("loader.gif");
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class custom 
            {
                public static class Assets
                {
                    public const string html_extensions_js = "~/Scripts/custom/html.extensions.js"; 
                    public const string jq_js = "~/Scripts/custom/jq.js"; 
                    public const string jquery_autogrow_textarea_js = "~/Scripts/custom/jquery.autogrow-textarea.js"; 
                    public const string jquery_cascadingDropDown_js = "~/Scripts/custom/jquery.cascadingDropDown.js"; 
                    public const string jquery_custom_extensions_js = "~/Scripts/custom/jquery.custom-extensions.js"; 
                    public const string switchFunctions_js = "~/Scripts/custom/switchFunctions.js"; 
                }
            }
            public static partial class uxp 
            {
                public static class Assets
                {
                    public const string bootstrap_datepicker_bg_min_js = "~/Scripts/uxp/bootstrap-datepicker.bg.min.js"; 
                    public const string bootstrap_datepicker_min_js = "~/Scripts/uxp/bootstrap-datepicker.min.js"; 
                    public const string bootstrap_min_js = "~/Scripts/uxp/bootstrap.min.js"; 
                    public const string html5shiv_js = "~/Scripts/uxp/html5shiv.js"; 
                    public const string jquery_1_11_2_min_js = "~/Scripts/uxp/jquery-1.11.2.min.js"; 
                    public const string jquery_easing_1_3_js = "~/Scripts/uxp/jquery.easing.1.3.js"; 
                    public const string respond_min_js = "~/Scripts/uxp/respond.min.js"; 
                    public const string select2_min_js = "~/Scripts/uxp/select2.min.js"; 
                    public const string select2_locale_bg_js = "~/Scripts/uxp/select2_locale_bg.js"; 
                }
            }
            public static class Assets
            {
                public const string scripts_js = "~/Scripts/scripts.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class select2 
                {
                    public static class Assets
                    {
                        public const string select2_css = "~/Content/css/select2/select2.css";
                    }
                }
                public static class Assets
                {
                    public const string bootstrap_datepicker3_min_css = "~/Content/css/bootstrap-datepicker3.min.css";
                    public const string bootstrap_datepicker3_standalone_min_css = "~/Content/css/bootstrap-datepicker3.standalone.min.css";
                    public const string bootstrap_min_css = "~/Content/css/bootstrap.min.css";
                    public const string custom_style_css = "~/Content/css/custom-style.css";
                    public const string style_css = "~/Content/css/style.css";
                    public const string summons_style_css = "~/Content/css/summons-style.css";
                }
            }
            public static partial class img 
            {
                public static partial class icons 
                {
                    public static partial class browsers 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class files 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string PagedList_css = "~/Content/PagedList.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


